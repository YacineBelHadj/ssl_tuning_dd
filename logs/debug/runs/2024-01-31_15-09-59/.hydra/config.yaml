task_name: debug
tags:
- dev
train: true
test: true
save_state_dict: true
ckpt_path: null
seed: 42
name: test-0.1.0
transform:
  transform_psd:
    _target_: src.data.psm.transform.create_psd_transformer
    database_path: ${oc.env:PATH_DATA}
    freq_min: 0
    freq_max: 150
    num_classes: 20
  transform_label:
    _target_: src.data.psm.transform.create_label_transformer
    database_path: ${oc.env:PATH_DATA}
    freq_min: 0
    freq_max: 150
    num_classes: 20
  dim_psd:
    _target_: src.data.psm.transform.dimension_psd
    database_path: ${oc.env:PATH_DATA}
    freq_min: 0
    freq_max: 150
    num_classes: 20
  dim_psd_save: ${set_env:${transform.dim_psd},DIM_PSD}
dataset:
  train_val:
    _target_: src.data.psm.dataset.build_dataset
    database_path: ${oc.env:PATH_DATA}
    table_name: processed_data
    columns:
    - PSD
    - id
    preload: true
    condition: stage =?
    parameters:
    - train
    transform: ${transform.transform_psd}
    transform_label: ${transform.transform_label}
    _recursive_: true
  test:
    _target_: src.data.psm.dataset.build_dataset
    database_path: ${oc.env:PATH_DATA}
    table_name: processed_data
    columns:
    - PSD
    - id
    transform: ${transform.transform_psd}
    transform_label: ${transform.transform_label}
    preload: true
    condition: stage =?
    parameters:
    - test
  affected_real_anomaly:
    _target_: src.data.psm.dataset.build_dataset
    database_path: ${oc.env:PATH_DATA}
    table_name: processed_data
    columns:
    - PSD
    - id
    transform: ${transform.transform_psd}
    transform_label: ${transform.transform_label}
    preload: true
    condition: stage =?
    parameters:
    - anomaly
  reference:
    _target_: src.data.psm.dataset.build_dataset
    database_path: ${oc.env:PATH_DATA_V}
    table_name: ORIGINAL_PSD
    columns:
    - PSD
    - id
    transform: ${transform.transform_psd}
    transform_label: ${transform.transform_label}
    preload: true
  affected_virtual_anomaly:
    _target_: src.data.psm.dataset.build_dataset
    database_path: ${oc.env:PATH_DATA_V}
    table_name: VAS_notch
    columns:
    - PSD
    - id
    transform: ${transform.transform_psd}
    transform_label: ${transform.transform_label}
    preload: false
datamodule:
  _target_: src.data.psm.datamodule.DataModule
  tr_val_split: 0.8
  train_val:
    _target_: torch.utils.data.DataLoader
    dataset: ${dataset.train_val}
    batch_size: 64
    shuffle: true
    num_workers: 4
    _recursive_: false
  test:
    _target_: torch.utils.data.DataLoader
    dataset: ${dataset.test}
    batch_size: 64
    shuffle: false
    num_workers: 4
    _recursive_: false
  affected_real_anomaly:
    _target_: torch.utils.data.DataLoader
    dataset: ${dataset.affected_real_anomaly}
    batch_size: 1000
    shuffle: false
    num_workers: 4
    _recursive_: false
  reference:
    _target_: torch.utils.data.DataLoader
    dataset: ${dataset.reference}
    batch_size: 1000
    shuffle: false
    num_workers: 4
    _recursive_: false
  affected_virtual_anomaly:
    _target_: torch.utils.data.DataLoader
    dataset: ${dataset.affected_virtual_anomaly}
    batch_size: 4000
    shuffle: false
    num_workers: 4
    _recursive_: false
backbone:
  _target_: src.model.classifier.ClassifierModule
  cfg:
    network:
      _target_: src.model.component.simple_dense_net.SimpleDenseNet
      input_dim: ${oc.env:DIM_PSD}
      hidden_layers:
      - 64
      - 128
      - 64
      embedding_dim: 32
      output_dim: 20
      dropout: 0.5
      activation: ReLU
      batch_norm: true
      bias: true
      temperature: 1
      l1_regularization: 0.0001
      l2_regularization: 1.0e-05
    optimizer:
      _target_: torch.optim.Adam
      lr: 0.001
      weight_decay: 0.0001
    scheduler:
      _target_: torch.optim.lr_scheduler.CosineAnnealingLR
      T_max: 10
      eta_min: 1.0e-10
      _partial_: true
    loss:
      _target_: torch.nn.CrossEntropyLoss
      _partial_: true
    metric:
      _target_: torchmetrics.Accuracy
      task: multiclass
      num_classes: 20
      _partial_: true
    logging:
      on_step: false
      on_epoch: true
      sync_dist: true
      prog_bar: true
  _recursive_: false
paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  data_dir: ${paths.root_dir}/data/
  log_dir: ${paths.root_dir}/logs/
  output_dir: ${hydra:runtime.output_dir}
  work_dir: ${hydra:runtime.cwd}
trainer:
  _target_: pytorch_lightning.Trainer
  min_epochs: 1
  max_epochs: 2
  accelerator: cpu
  devices: 1
  check_val_every_n_epoch: 1
  deterministic: false
